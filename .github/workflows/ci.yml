name: CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read

jobs:

  code-style:
    runs-on: 'ubuntu-latest'
    name: 'Coding style'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v3'

      - name: 'Setup PHP'
        uses: 'shivammathur/setup-php@v2'
        with:
          php-version: '8.2'
          coverage: 'none'
          tools: 'composer:v2, composer-normalize'

      - name: 'Install dependencies'
        run: |
          composer install --no-interaction --no-progress --ansi

      - name: 'Check PHP code'
        run: |
          composer phpcs
          composer phpmd

      - name: 'Check composer.json'
        run: 'composer-normalize --diff --dry-run --no-update-lock'
        if: 'always()'

  phpunit:
    runs-on: ${{ matrix.system }}
    name: 'PHPUnit (PHP ${{ matrix.php }} - ${{ matrix.system }})'
    strategy:
      matrix:
        system: ['ubuntu-latest']
        php:
          - '8.1'
          - '8.2'
          - '8.3'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: 'Setup PHP'
        uses: 'shivammathur/setup-php@v2'
        with:
          php-version: '${{ matrix.php }}'
          coverage: 'none'
          tools: 'composer:v2'

      - name: 'Install dependencies'
        run: |
          composer install --no-interaction --no-progress --ansi
      
      - name: 'Run php server'
        run: php -S localhost:9888 -t tests/Proxy/ &
          
      - name: 'Run unit tests'
        run: vendor/bin/phpunit

  code-coverage:
    runs-on: 'ubuntu-latest'
    name: 'Code Coverage'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v3'

      - name: 'Setup PHP'
        uses: 'shivammathur/setup-php@v2'
        with:
          php-version: '8.2'
          tools: 'composer:v2'

      - name: 'Install the dependencies'
        run: |
          composer install --no-interaction --no-progress --ansi
      
      - name: 'Run php server'
        run: php -S localhost:9888 -t tests/Proxy/ &

      - name: 'Run code coverage'
        run: |
          vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Send code coverage report to Codecov.io
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}